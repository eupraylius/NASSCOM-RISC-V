// LAB for combinational logic in TL Verilog using Makerchip

\m4_TLV_version 1d: tl-x.org
\SV
   // source: https://github.com/stevehoover/RISC-V_MYTH_Workshop
   
   m4_include_lib(['https://raw.githubusercontent.com/stevehoover/RISC-V_MYTH_Workshop/ecba3769fff373ef6b8f66b3347e8940c859792d/tlv_lib/calculator_shell_lib.tlv'])

\SV
   m4_makerchip_module

\TLV
   |calc
      @0
         $reset = *reset;
         
      @1   
         $val1[31:0] = >>2$out[31:0];
         $val2[31:0] = $rand2[3:0];
         $valid = $reset ? 1'b0 : (1 + >>1$valid);
         
         $valid_or_reset = $valid || $reset;
         
      ?$valid_or_reset
         @1
            $sum[31:0] = $val1[31:0] + $val2[31:0];
            $diff[31:0] = $val1[31:0] - $val2[31:0];
            $prod[31:0] = $val1[31:0] * $val2[31:0];
            $quot[31:0] = $val1[31:0] / $val2[31:0];
         
         @2
            $out[31:0] = $reset ? 32'b0 :($op[2:0] == 3'b000) ? $sum[31:0] :
                                         ($op[2:0] == 3'b001) ? $diff[31:0] :
                                         ($op[2:0] == 3'b010) ? $prod[31:0] :
                                         ($op[2:0] == 3'b011) ? $quot[31:0] :
                                         ($op[2:0] == 3'b100) ? >>2$mem[31:0] :
                                                                32'b0;
            
            $mem[31:0] = $reset ? 32'b0 : ($op[2:0] == 3'b101) ? >>2$mem[31:0]:
                                          ($op[2:0] == 3'b110) ? >>2$out[31:0]:
                                                                 32'b0;

                                              *passed = *cyc_cnt > 40;
   *failed = 1'b0;
   

\SV
   endmodule

         
